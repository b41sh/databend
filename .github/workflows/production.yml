name: Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'website/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  PROTOC: protoc

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/check
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build_macos:
    runs-on: macos-11
    needs: check
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/build_release
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ matrix.target }}

  build_linux:
    runs-on: ubuntu-latest
    needs: check
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/build_release
        with:
          target: ${{ matrix.target }}

  test_unit:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/test_unit
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  test_stateless_standalone_linux:
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/test_stateless_standalone_linux
        with:
          profile: release

  # test_stateless_standalone_macos:
  #   runs-on: macos-11
  #   needs: build_macos
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: ./.github/actions/test_stateless_standalone_macos
  #       with:
  #         profile: release

  test_stateless_cluster_linux:
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/test_stateless_cluster_linux
        with:
          profile: release

  test_stateless_cluster_macos:
    runs-on: macos-11
    needs: build_macos
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/test_stateless_cluster_macos
        with:
          profile: release

  test_stateful_standalone:
    runs-on: ubuntu-latest
    needs: build_linux
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/test_stateful_standalone
        with:
          profile: release

  publish_image:
    runs-on: ubuntu-latest
    # Release after all tests have been passed.
    needs:
      - test_unit
      - test_stateless_standalone_linux
      - test_stateless_cluster_linux
      - test_stateful_standalone
    strategy:
      matrix:
        config:
          - { target: x86_64-unknown-linux-gnu, platform: linux/amd64 }
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all tags,  metasrv and metaclient need tag as its version.
          fetch-depth: 0
      - uses: ./.github/actions/publish_image
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerhub_namespace: ${{ secrets.DOCKERHUB_NAMESPACE }}
          target: ${{ matrix.config.target }}
          platform: ${{ matrix.config.platform }}
