---------- Input ----------
show tables
---------- Output ---------
SHOW TABLES
---------- AST ------------
ShowTables {
    database: None,
    full: false,
    limit: None,
    with_history: false,
}


---------- Input ----------
show processlist;
---------- Output ---------
SHOW PROCESSLIST
---------- AST ------------
ShowProcessList


---------- Input ----------
show create table a.b;
---------- Output ---------
SHOW CREATE TABLE a.b
---------- AST ------------
ShowCreateTable {
    database: Some(
        Identifier {
            name: "a",
            quote: None,
            span: Ident(18..19),
        },
    ),
    table: Identifier {
        name: "b",
        quote: None,
        span: Ident(20..21),
    },
}


---------- Input ----------
explain pipeline select a from b;
---------- Output ---------
EXPLAIN PIPELINE SELECT a FROM b
---------- AST ------------
Explain {
    kind: Pipeline,
    query: Query(
        Query {
            span: [
                SELECT(17..23),
                Ident(24..25),
                FROM(26..30),
                Ident(31..32),
            ],
            body: Select(
                SelectStmt {
                    span: [
                        SELECT(17..23),
                        Ident(24..25),
                        FROM(26..30),
                        Ident(31..32),
                    ],
                    distinct: false,
                    select_list: [
                        AliasedExpr {
                            expr: ColumnRef {
                                span: [
                                    Ident(24..25),
                                ],
                                database: None,
                                table: None,
                                column: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(24..25),
                                },
                            },
                            alias: None,
                        },
                    ],
                    from: Some(
                        Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "b",
                                quote: None,
                                span: Ident(31..32),
                            },
                            alias: None,
                            travel_point: None,
                        },
                    ),
                    selection: None,
                    group_by: [],
                    having: None,
                },
            ),
            order_by: [],
            limit: [],
            offset: None,
            format: None,
        },
    ),
}


---------- Input ----------
describe a;
---------- Output ---------
DESCRIBE a
---------- AST ------------
Describe {
    catalog: None,
    database: None,
    table: Identifier {
        name: "a",
        quote: None,
        span: Ident(9..10),
    },
}


---------- Input ----------
describe a; describe b
---------- Output ---------
DESCRIBE a
---------- AST ------------
Describe {
    catalog: None,
    database: None,
    table: Identifier {
        name: "a",
        quote: None,
        span: Ident(9..10),
    },
}


---------- Output ---------
DESCRIBE b
---------- AST ------------
Describe {
    catalog: None,
    database: None,
    table: Identifier {
        name: "b",
        quote: None,
        span: Ident(21..22),
    },
}


---------- Input ----------
create table if not exists a.b (c integer not null default 1, b varchar);
---------- Output ---------
CREATE TABLE IF NOT EXISTS a.b (c Int32 NOT NULL DEFAULT 1, b STRING NOT NULL)
---------- AST ------------
CreateTable {
    if_not_exists: true,
    database: Some(
        Identifier {
            name: "a",
            quote: None,
            span: Ident(27..28),
        },
    ),
    table: Identifier {
        name: "b",
        quote: None,
        span: Ident(29..30),
    },
    source: Some(
        Columns(
            [
                ColumnDefinition {
                    name: Identifier {
                        name: "c",
                        quote: None,
                        span: Ident(32..33),
                    },
                    data_type: Int32,
                    nullable: false,
                    default_expr: Some(
                        Literal {
                            span: [
                                LiteralNumber(59..60),
                            ],
                            lit: Number(
                                "1",
                            ),
                        },
                    ),
                },
                ColumnDefinition {
                    name: Identifier {
                        name: "b",
                        quote: None,
                        span: Ident(62..63),
                    },
                    data_type: String,
                    nullable: false,
                    default_expr: None,
                },
            ],
        ),
    ),
    engine: Null,
    cluster_by: [],
    as_query: None,
    comment: None,
}


---------- Input ----------
create table if not exists a.b (c integer default 1 not null, b varchar) as select * from t;
---------- Output ---------
CREATE TABLE IF NOT EXISTS a.b (c Int32 NOT NULL DEFAULT 1, b STRING NOT NULL) AS SELECT * FROM t
---------- AST ------------
CreateTable {
    if_not_exists: true,
    database: Some(
        Identifier {
            name: "a",
            quote: None,
            span: Ident(27..28),
        },
    ),
    table: Identifier {
        name: "b",
        quote: None,
        span: Ident(29..30),
    },
    source: Some(
        Columns(
            [
                ColumnDefinition {
                    name: Identifier {
                        name: "c",
                        quote: None,
                        span: Ident(32..33),
                    },
                    data_type: Int32,
                    nullable: false,
                    default_expr: Some(
                        Literal {
                            span: [
                                LiteralNumber(50..51),
                            ],
                            lit: Number(
                                "1",
                            ),
                        },
                    ),
                },
                ColumnDefinition {
                    name: Identifier {
                        name: "b",
                        quote: None,
                        span: Ident(62..63),
                    },
                    data_type: String,
                    nullable: false,
                    default_expr: None,
                },
            ],
        ),
    ),
    engine: Null,
    cluster_by: [],
    as_query: Some(
        Query {
            span: [
                SELECT(76..82),
                Multiply(83..84),
                FROM(85..89),
                Ident(90..91),
            ],
            body: Select(
                SelectStmt {
                    span: [
                        SELECT(76..82),
                        Multiply(83..84),
                        FROM(85..89),
                        Ident(90..91),
                    ],
                    distinct: false,
                    select_list: [
                        QualifiedName(
                            [
                                Star,
                            ],
                        ),
                    ],
                    from: Some(
                        Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "t",
                                quote: None,
                                span: Ident(90..91),
                            },
                            alias: None,
                            travel_point: None,
                        },
                    ),
                    selection: None,
                    group_by: [],
                    having: None,
                },
            ),
            order_by: [],
            limit: [],
            offset: None,
            format: None,
        },
    ),
    comment: None,
}


---------- Input ----------
create table a.b like c.d;
---------- Output ---------
CREATE TABLE a.b LIKE c.d
---------- AST ------------
CreateTable {
    if_not_exists: false,
    database: Some(
        Identifier {
            name: "a",
            quote: None,
            span: Ident(13..14),
        },
    ),
    table: Identifier {
        name: "b",
        quote: None,
        span: Ident(15..16),
    },
    source: Some(
        Like {
            database: Some(
                Identifier {
                    name: "c",
                    quote: None,
                    span: Ident(22..23),
                },
            ),
            table: Identifier {
                name: "d",
                quote: None,
                span: Ident(24..25),
            },
        },
    ),
    engine: Null,
    cluster_by: [],
    as_query: None,
    comment: None,
}


---------- Input ----------
create table t like t2 engine = memory;
---------- Output ---------
CREATE TABLE t LIKE t2 ENGINE = MEMORY
---------- AST ------------
CreateTable {
    if_not_exists: false,
    database: None,
    table: Identifier {
        name: "t",
        quote: None,
        span: Ident(13..14),
    },
    source: Some(
        Like {
            database: None,
            table: Identifier {
                name: "t2",
                quote: None,
                span: Ident(20..22),
            },
        },
    ),
    engine: Memory,
    cluster_by: [],
    as_query: None,
    comment: None,
}


---------- Input ----------
truncate table a;
---------- Output ---------
TRUNCATE TABLE a
---------- AST ------------
TruncateTable {
    database: None,
    table: Identifier {
        name: "a",
        quote: None,
        span: Ident(15..16),
    },
    purge: false,
}


---------- Input ----------
truncate table "a".b;
---------- Output ---------
TRUNCATE TABLE "a".b
---------- AST ------------
TruncateTable {
    database: Some(
        Identifier {
            name: "a",
            quote: Some(
                '"',
            ),
            span: QuotedString(15..18),
        },
    ),
    table: Identifier {
        name: "b",
        quote: None,
        span: Ident(19..20),
    },
    purge: false,
}


---------- Input ----------
drop table a;
---------- Output ---------
DROP TABLE a
---------- AST ------------
DropTable {
    if_exists: false,
    database: None,
    table: Identifier {
        name: "a",
        quote: None,
        span: Ident(11..12),
    },
    all: false,
}


---------- Input ----------
drop table if exists a."b";
---------- Output ---------
DROP TABLE IF EXISTS a."b"
---------- AST ------------
DropTable {
    if_exists: true,
    database: Some(
        Identifier {
            name: "a",
            quote: None,
            span: Ident(21..22),
        },
    ),
    table: Identifier {
        name: "b",
        quote: Some(
            '"',
        ),
        span: QuotedString(23..26),
    },
    all: false,
}


---------- Input ----------
use "a";
---------- Output ---------
USE "a"
---------- AST ------------
UseDatabase {
    database: Identifier {
        name: "a",
        quote: Some(
            '"',
        ),
        span: QuotedString(4..7),
    },
}


---------- Input ----------
create database if not exists a;
---------- Output ---------
CREATE DATABASE IF NOT EXISTS a
---------- AST ------------
CreateDatabase {
    if_not_exists: true,
    database: Identifier {
        name: "a",
        quote: None,
        span: Ident(30..31),
    },
    engine: Null,
    options: [],
}


---------- Input ----------
create table c(a DateTime null, b DateTime(3));
---------- Output ---------
CREATE TABLE c (a DATETIME NULL, b DATETIME(3) NOT NULL)
---------- AST ------------
CreateTable {
    if_not_exists: false,
    database: None,
    table: Identifier {
        name: "c",
        quote: None,
        span: Ident(13..14),
    },
    source: Some(
        Columns(
            [
                ColumnDefinition {
                    name: Identifier {
                        name: "a",
                        quote: None,
                        span: Ident(15..16),
                    },
                    data_type: DateTime {
                        precision: None,
                    },
                    nullable: true,
                    default_expr: None,
                },
                ColumnDefinition {
                    name: Identifier {
                        name: "b",
                        quote: None,
                        span: Ident(32..33),
                    },
                    data_type: DateTime {
                        precision: Some(
                            3,
                        ),
                    },
                    nullable: false,
                    default_expr: None,
                },
            ],
        ),
    ),
    engine: Null,
    cluster_by: [],
    as_query: None,
    comment: None,
}


---------- Input ----------
truncate table test;
---------- Output ---------
TRUNCATE TABLE test
---------- AST ------------
TruncateTable {
    database: None,
    table: Identifier {
        name: "test",
        quote: None,
        span: Ident(15..19),
    },
    purge: false,
}


---------- Input ----------
truncate table test_db.test;
---------- Output ---------
TRUNCATE TABLE test_db.test
---------- AST ------------
TruncateTable {
    database: Some(
        Identifier {
            name: "test_db",
            quote: None,
            span: Ident(15..22),
        },
    ),
    table: Identifier {
        name: "test",
        quote: None,
        span: Ident(23..27),
    },
    purge: false,
}


---------- Input ----------
DROP table table1;
---------- Output ---------
DROP TABLE table1
---------- AST ------------
DropTable {
    if_exists: false,
    database: None,
    table: Identifier {
        name: "table1",
        quote: None,
        span: Ident(11..17),
    },
    all: false,
}


---------- Input ----------
DROP table IF EXISTS table1;
---------- Output ---------
DROP TABLE IF EXISTS table1
---------- AST ------------
DropTable {
    if_exists: true,
    database: None,
    table: Identifier {
        name: "table1",
        quote: None,
        span: Ident(21..27),
    },
    all: false,
}


---------- Input ----------
CREATE TABLE t(c1 int null, c2 bigint null, c3 varchar null);
---------- Output ---------
CREATE TABLE t (c1 Int32 NULL, c2 Int64 NULL, c3 STRING NULL)
---------- AST ------------
CreateTable {
    if_not_exists: false,
    database: None,
    table: Identifier {
        name: "t",
        quote: None,
        span: Ident(13..14),
    },
    source: Some(
        Columns(
            [
                ColumnDefinition {
                    name: Identifier {
                        name: "c1",
                        quote: None,
                        span: Ident(15..17),
                    },
                    data_type: Int32,
                    nullable: true,
                    default_expr: None,
                },
                ColumnDefinition {
                    name: Identifier {
                        name: "c2",
                        quote: None,
                        span: Ident(28..30),
                    },
                    data_type: Int64,
                    nullable: true,
                    default_expr: None,
                },
                ColumnDefinition {
                    name: Identifier {
                        name: "c3",
                        quote: None,
                        span: Ident(44..46),
                    },
                    data_type: String,
                    nullable: true,
                    default_expr: None,
                },
            ],
        ),
    ),
    engine: Null,
    cluster_by: [],
    as_query: None,
    comment: None,
}


---------- Input ----------
CREATE TABLE t(c1 int not null, c2 bigint not null, c3 varchar not null);
---------- Output ---------
CREATE TABLE t (c1 Int32 NOT NULL, c2 Int64 NOT NULL, c3 STRING NOT NULL)
---------- AST ------------
CreateTable {
    if_not_exists: false,
    database: None,
    table: Identifier {
        name: "t",
        quote: None,
        span: Ident(13..14),
    },
    source: Some(
        Columns(
            [
                ColumnDefinition {
                    name: Identifier {
                        name: "c1",
                        quote: None,
                        span: Ident(15..17),
                    },
                    data_type: Int32,
                    nullable: false,
                    default_expr: None,
                },
                ColumnDefinition {
                    name: Identifier {
                        name: "c2",
                        quote: None,
                        span: Ident(32..34),
                    },
                    data_type: Int64,
                    nullable: false,
                    default_expr: None,
                },
                ColumnDefinition {
                    name: Identifier {
                        name: "c3",
                        quote: None,
                        span: Ident(52..54),
                    },
                    data_type: String,
                    nullable: false,
                    default_expr: None,
                },
            ],
        ),
    ),
    engine: Null,
    cluster_by: [],
    as_query: None,
    comment: None,
}


---------- Input ----------
CREATE TABLE t(c1 int default 1);
---------- Output ---------
CREATE TABLE t (c1 Int32 NOT NULL DEFAULT 1)
---------- AST ------------
CreateTable {
    if_not_exists: false,
    database: None,
    table: Identifier {
        name: "t",
        quote: None,
        span: Ident(13..14),
    },
    source: Some(
        Columns(
            [
                ColumnDefinition {
                    name: Identifier {
                        name: "c1",
                        quote: None,
                        span: Ident(15..17),
                    },
                    data_type: Int32,
                    nullable: false,
                    default_expr: Some(
                        Literal {
                            span: [
                                LiteralNumber(30..31),
                            ],
                            lit: Number(
                                "1",
                            ),
                        },
                    ),
                },
            ],
        ),
    ),
    engine: Null,
    cluster_by: [],
    as_query: None,
    comment: None,
}


---------- Input ----------
DROP database if exists db1;
---------- Output ---------
DROP DATABASE IF EXISTS db1
---------- AST ------------
DropDatabase {
    if_exists: true,
    database: Identifier {
        name: "db1",
        quote: None,
        span: Ident(24..27),
    },
}


---------- Input ----------
select distinct a, count(*) from t where a = 1 and b - 1 < a group by a having a = 1;
---------- Output ---------
SELECT DISTINCT a, COUNT(*) FROM t WHERE a = 1 AND b - 1 < a GROUP BY a HAVING a = 1
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            DISTINCT(7..15),
            Ident(16..17),
            Comma(17..18),
            COUNT(19..24),
            LParen(24..25),
            Multiply(25..26),
            RParen(26..27),
            FROM(28..32),
            Ident(33..34),
            WHERE(35..40),
            Ident(41..42),
            Eq(43..44),
            LiteralNumber(45..46),
            AND(47..50),
            Ident(51..52),
            Minus(53..54),
            LiteralNumber(55..56),
            Lt(57..58),
            Ident(59..60),
            GROUP(61..66),
            BY(67..69),
            Ident(70..71),
            HAVING(72..78),
            Ident(79..80),
            Eq(81..82),
            LiteralNumber(83..84),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    DISTINCT(7..15),
                    Ident(16..17),
                    Comma(17..18),
                    COUNT(19..24),
                    LParen(24..25),
                    Multiply(25..26),
                    RParen(26..27),
                    FROM(28..32),
                    Ident(33..34),
                    WHERE(35..40),
                    Ident(41..42),
                    Eq(43..44),
                    LiteralNumber(45..46),
                    AND(47..50),
                    Ident(51..52),
                    Minus(53..54),
                    LiteralNumber(55..56),
                    Lt(57..58),
                    Ident(59..60),
                    GROUP(61..66),
                    BY(67..69),
                    Ident(70..71),
                    HAVING(72..78),
                    Ident(79..80),
                    Eq(81..82),
                    LiteralNumber(83..84),
                ],
                distinct: true,
                select_list: [
                    AliasedExpr {
                        expr: ColumnRef {
                            span: [
                                Ident(16..17),
                            ],
                            database: None,
                            table: None,
                            column: Identifier {
                                name: "a",
                                quote: None,
                                span: Ident(16..17),
                            },
                        },
                        alias: None,
                    },
                    AliasedExpr {
                        expr: CountAll {
                            span: [
                                COUNT(19..24),
                                LParen(24..25),
                                Multiply(25..26),
                                RParen(26..27),
                            ],
                        },
                        alias: None,
                    },
                ],
                from: Some(
                    Table {
                        catalog: None,
                        database: None,
                        table: Identifier {
                            name: "t",
                            quote: None,
                            span: Ident(33..34),
                        },
                        alias: None,
                        travel_point: None,
                    },
                ),
                selection: Some(
                    BinaryOp {
                        span: [
                            AND(47..50),
                        ],
                        op: And,
                        left: BinaryOp {
                            span: [
                                Eq(43..44),
                            ],
                            op: Eq,
                            left: ColumnRef {
                                span: [
                                    Ident(41..42),
                                ],
                                database: None,
                                table: None,
                                column: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(41..42),
                                },
                            },
                            right: Literal {
                                span: [
                                    LiteralNumber(45..46),
                                ],
                                lit: Number(
                                    "1",
                                ),
                            },
                        },
                        right: BinaryOp {
                            span: [
                                Lt(57..58),
                            ],
                            op: Lt,
                            left: BinaryOp {
                                span: [
                                    Minus(53..54),
                                ],
                                op: Minus,
                                left: ColumnRef {
                                    span: [
                                        Ident(51..52),
                                    ],
                                    database: None,
                                    table: None,
                                    column: Identifier {
                                        name: "b",
                                        quote: None,
                                        span: Ident(51..52),
                                    },
                                },
                                right: Literal {
                                    span: [
                                        LiteralNumber(55..56),
                                    ],
                                    lit: Number(
                                        "1",
                                    ),
                                },
                            },
                            right: ColumnRef {
                                span: [
                                    Ident(59..60),
                                ],
                                database: None,
                                table: None,
                                column: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(59..60),
                                },
                            },
                        },
                    },
                ),
                group_by: [
                    ColumnRef {
                        span: [
                            Ident(70..71),
                        ],
                        database: None,
                        table: None,
                        column: Identifier {
                            name: "a",
                            quote: None,
                            span: Ident(70..71),
                        },
                    },
                ],
                having: Some(
                    BinaryOp {
                        span: [
                            Eq(81..82),
                        ],
                        op: Eq,
                        left: ColumnRef {
                            span: [
                                Ident(79..80),
                            ],
                            database: None,
                            table: None,
                            column: Identifier {
                                name: "a",
                                quote: None,
                                span: Ident(79..80),
                            },
                        },
                        right: Literal {
                            span: [
                                LiteralNumber(83..84),
                            ],
                            lit: Number(
                                "1",
                            ),
                        },
                    },
                ),
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from t4;
---------- Output ---------
SELECT * FROM t4
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..16),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..16),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Table {
                        catalog: None,
                        database: None,
                        table: Identifier {
                            name: "t4",
                            quote: None,
                            span: Ident(14..16),
                        },
                        alias: None,
                        travel_point: None,
                    },
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from aa.bb;
---------- Output ---------
SELECT * FROM aa.bb
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..16),
            Period(16..17),
            Ident(17..19),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..16),
                    Period(16..17),
                    Ident(17..19),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Table {
                        catalog: None,
                        database: Some(
                            Identifier {
                                name: "aa",
                                quote: None,
                                span: Ident(14..16),
                            },
                        ),
                        table: Identifier {
                            name: "bb",
                            quote: None,
                            span: Ident(17..19),
                        },
                        alias: None,
                        travel_point: None,
                    },
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a, b, c;
---------- Output ---------
SELECT * FROM a CROSS JOIN b CROSS JOIN c
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            Comma(15..16),
            Ident(17..18),
            Comma(18..19),
            Ident(20..21),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    Comma(15..16),
                    Ident(17..18),
                    Comma(18..19),
                    Ident(20..21),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: CrossJoin,
                            condition: None,
                            left: Join(
                                Join {
                                    op: CrossJoin,
                                    condition: None,
                                    left: Table {
                                        catalog: None,
                                        database: None,
                                        table: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(14..15),
                                        },
                                        alias: None,
                                        travel_point: None,
                                    },
                                    right: Table {
                                        catalog: None,
                                        database: None,
                                        table: Identifier {
                                            name: "b",
                                            quote: None,
                                            span: Ident(17..18),
                                        },
                                        alias: None,
                                        travel_point: None,
                                    },
                                },
                            ),
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "c",
                                    quote: None,
                                    span: Ident(20..21),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a join b on a.a = b.a;
---------- Output ---------
SELECT * FROM a INNER JOIN b ON a.a = b.a
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            JOIN(16..20),
            Ident(21..22),
            ON(23..25),
            Ident(26..27),
            Period(27..28),
            Ident(28..29),
            Eq(30..31),
            Ident(32..33),
            Period(33..34),
            Ident(34..35),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    JOIN(16..20),
                    Ident(21..22),
                    ON(23..25),
                    Ident(26..27),
                    Period(27..28),
                    Ident(28..29),
                    Eq(30..31),
                    Ident(32..33),
                    Period(33..34),
                    Ident(34..35),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: Inner,
                            condition: On(
                                BinaryOp {
                                    span: [
                                        Eq(30..31),
                                    ],
                                    op: Eq,
                                    left: ColumnRef {
                                        span: [
                                            Ident(26..27),
                                            Period(27..28),
                                            Ident(28..29),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "a",
                                                quote: None,
                                                span: Ident(26..27),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(28..29),
                                        },
                                    },
                                    right: ColumnRef {
                                        span: [
                                            Ident(32..33),
                                            Period(33..34),
                                            Ident(34..35),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "b",
                                                quote: None,
                                                span: Ident(32..33),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(34..35),
                                        },
                                    },
                                },
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(21..22),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a left outer join b on a.a = b.a;
---------- Output ---------
SELECT * FROM a LEFT OUTER JOIN b ON a.a = b.a
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            LEFT(16..20),
            OUTER(21..26),
            JOIN(27..31),
            Ident(32..33),
            ON(34..36),
            Ident(37..38),
            Period(38..39),
            Ident(39..40),
            Eq(41..42),
            Ident(43..44),
            Period(44..45),
            Ident(45..46),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    LEFT(16..20),
                    OUTER(21..26),
                    JOIN(27..31),
                    Ident(32..33),
                    ON(34..36),
                    Ident(37..38),
                    Period(38..39),
                    Ident(39..40),
                    Eq(41..42),
                    Ident(43..44),
                    Period(44..45),
                    Ident(45..46),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: LeftOuter,
                            condition: On(
                                BinaryOp {
                                    span: [
                                        Eq(41..42),
                                    ],
                                    op: Eq,
                                    left: ColumnRef {
                                        span: [
                                            Ident(37..38),
                                            Period(38..39),
                                            Ident(39..40),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "a",
                                                quote: None,
                                                span: Ident(37..38),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(39..40),
                                        },
                                    },
                                    right: ColumnRef {
                                        span: [
                                            Ident(43..44),
                                            Period(44..45),
                                            Ident(45..46),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "b",
                                                quote: None,
                                                span: Ident(43..44),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(45..46),
                                        },
                                    },
                                },
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(32..33),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a right outer join b on a.a = b.a;
---------- Output ---------
SELECT * FROM a RIGHT OUTER JOIN b ON a.a = b.a
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            RIGHT(16..21),
            OUTER(22..27),
            JOIN(28..32),
            Ident(33..34),
            ON(35..37),
            Ident(38..39),
            Period(39..40),
            Ident(40..41),
            Eq(42..43),
            Ident(44..45),
            Period(45..46),
            Ident(46..47),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    RIGHT(16..21),
                    OUTER(22..27),
                    JOIN(28..32),
                    Ident(33..34),
                    ON(35..37),
                    Ident(38..39),
                    Period(39..40),
                    Ident(40..41),
                    Eq(42..43),
                    Ident(44..45),
                    Period(45..46),
                    Ident(46..47),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: RightOuter,
                            condition: On(
                                BinaryOp {
                                    span: [
                                        Eq(42..43),
                                    ],
                                    op: Eq,
                                    left: ColumnRef {
                                        span: [
                                            Ident(38..39),
                                            Period(39..40),
                                            Ident(40..41),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "a",
                                                quote: None,
                                                span: Ident(38..39),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(40..41),
                                        },
                                    },
                                    right: ColumnRef {
                                        span: [
                                            Ident(44..45),
                                            Period(45..46),
                                            Ident(46..47),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "b",
                                                quote: None,
                                                span: Ident(44..45),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(46..47),
                                        },
                                    },
                                },
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(33..34),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a full outer join b on a.a = b.a;
---------- Output ---------
SELECT * FROM a FULL OUTER JOIN b ON a.a = b.a
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            FULL(16..20),
            OUTER(21..26),
            JOIN(27..31),
            Ident(32..33),
            ON(34..36),
            Ident(37..38),
            Period(38..39),
            Ident(39..40),
            Eq(41..42),
            Ident(43..44),
            Period(44..45),
            Ident(45..46),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    FULL(16..20),
                    OUTER(21..26),
                    JOIN(27..31),
                    Ident(32..33),
                    ON(34..36),
                    Ident(37..38),
                    Period(38..39),
                    Ident(39..40),
                    Eq(41..42),
                    Ident(43..44),
                    Period(44..45),
                    Ident(45..46),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: FullOuter,
                            condition: On(
                                BinaryOp {
                                    span: [
                                        Eq(41..42),
                                    ],
                                    op: Eq,
                                    left: ColumnRef {
                                        span: [
                                            Ident(37..38),
                                            Period(38..39),
                                            Ident(39..40),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "a",
                                                quote: None,
                                                span: Ident(37..38),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(39..40),
                                        },
                                    },
                                    right: ColumnRef {
                                        span: [
                                            Ident(43..44),
                                            Period(44..45),
                                            Ident(45..46),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "b",
                                                quote: None,
                                                span: Ident(43..44),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(45..46),
                                        },
                                    },
                                },
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(32..33),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a inner join b on a.a = b.a;
---------- Output ---------
SELECT * FROM a INNER JOIN b ON a.a = b.a
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            INNER(16..21),
            JOIN(22..26),
            Ident(27..28),
            ON(29..31),
            Ident(32..33),
            Period(33..34),
            Ident(34..35),
            Eq(36..37),
            Ident(38..39),
            Period(39..40),
            Ident(40..41),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    INNER(16..21),
                    JOIN(22..26),
                    Ident(27..28),
                    ON(29..31),
                    Ident(32..33),
                    Period(33..34),
                    Ident(34..35),
                    Eq(36..37),
                    Ident(38..39),
                    Period(39..40),
                    Ident(40..41),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: Inner,
                            condition: On(
                                BinaryOp {
                                    span: [
                                        Eq(36..37),
                                    ],
                                    op: Eq,
                                    left: ColumnRef {
                                        span: [
                                            Ident(32..33),
                                            Period(33..34),
                                            Ident(34..35),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "a",
                                                quote: None,
                                                span: Ident(32..33),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(34..35),
                                        },
                                    },
                                    right: ColumnRef {
                                        span: [
                                            Ident(38..39),
                                            Period(39..40),
                                            Ident(40..41),
                                        ],
                                        database: None,
                                        table: Some(
                                            Identifier {
                                                name: "b",
                                                quote: None,
                                                span: Ident(38..39),
                                            },
                                        ),
                                        column: Identifier {
                                            name: "a",
                                            quote: None,
                                            span: Ident(40..41),
                                        },
                                    },
                                },
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(27..28),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a left outer join b using(a);
---------- Output ---------
SELECT * FROM a LEFT OUTER JOIN b USING(a)
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            LEFT(16..20),
            OUTER(21..26),
            JOIN(27..31),
            Ident(32..33),
            USING(34..39),
            LParen(39..40),
            Ident(40..41),
            RParen(41..42),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    LEFT(16..20),
                    OUTER(21..26),
                    JOIN(27..31),
                    Ident(32..33),
                    USING(34..39),
                    LParen(39..40),
                    Ident(40..41),
                    RParen(41..42),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: LeftOuter,
                            condition: Using(
                                [
                                    Identifier {
                                        name: "a",
                                        quote: None,
                                        span: Ident(40..41),
                                    },
                                ],
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(32..33),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a right outer join b using(a);
---------- Output ---------
SELECT * FROM a RIGHT OUTER JOIN b USING(a)
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            RIGHT(16..21),
            OUTER(22..27),
            JOIN(28..32),
            Ident(33..34),
            USING(35..40),
            LParen(40..41),
            Ident(41..42),
            RParen(42..43),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    RIGHT(16..21),
                    OUTER(22..27),
                    JOIN(28..32),
                    Ident(33..34),
                    USING(35..40),
                    LParen(40..41),
                    Ident(41..42),
                    RParen(42..43),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: RightOuter,
                            condition: Using(
                                [
                                    Identifier {
                                        name: "a",
                                        quote: None,
                                        span: Ident(41..42),
                                    },
                                ],
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(33..34),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a full outer join b using(a);
---------- Output ---------
SELECT * FROM a FULL OUTER JOIN b USING(a)
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            FULL(16..20),
            OUTER(21..26),
            JOIN(27..31),
            Ident(32..33),
            USING(34..39),
            LParen(39..40),
            Ident(40..41),
            RParen(41..42),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    FULL(16..20),
                    OUTER(21..26),
                    JOIN(27..31),
                    Ident(32..33),
                    USING(34..39),
                    LParen(39..40),
                    Ident(40..41),
                    RParen(41..42),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: FullOuter,
                            condition: Using(
                                [
                                    Identifier {
                                        name: "a",
                                        quote: None,
                                        span: Ident(40..41),
                                    },
                                ],
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(32..33),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
select * from a inner join b using(a);
---------- Output ---------
SELECT * FROM a INNER JOIN b USING(a)
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Multiply(7..8),
            FROM(9..13),
            Ident(14..15),
            INNER(16..21),
            JOIN(22..26),
            Ident(27..28),
            USING(29..34),
            LParen(34..35),
            Ident(35..36),
            RParen(36..37),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Multiply(7..8),
                    FROM(9..13),
                    Ident(14..15),
                    INNER(16..21),
                    JOIN(22..26),
                    Ident(27..28),
                    USING(29..34),
                    LParen(34..35),
                    Ident(35..36),
                    RParen(36..37),
                ],
                distinct: false,
                select_list: [
                    QualifiedName(
                        [
                            Star,
                        ],
                    ),
                ],
                from: Some(
                    Join(
                        Join {
                            op: Inner,
                            condition: Using(
                                [
                                    Identifier {
                                        name: "a",
                                        quote: None,
                                        span: Ident(35..36),
                                    },
                                ],
                            ),
                            left: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "a",
                                    quote: None,
                                    span: Ident(14..15),
                                },
                                alias: None,
                                travel_point: None,
                            },
                            right: Table {
                                catalog: None,
                                database: None,
                                table: Identifier {
                                    name: "b",
                                    quote: None,
                                    span: Ident(27..28),
                                },
                                alias: None,
                                travel_point: None,
                            },
                        },
                    ),
                ),
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


---------- Input ----------
insert into t (c1, c2) values (1, 2), (3, 4);
---------- Output ---------
INSERT INTO t (c1, c2) VALUES (1, 2), (3, 4)
---------- AST ------------
Insert {
    database: None,
    table: Identifier {
        name: "t",
        quote: None,
        span: Ident(12..13),
    },
    columns: [
        Identifier {
            name: "c1",
            quote: None,
            span: Ident(15..17),
        },
        Identifier {
            name: "c2",
            quote: None,
            span: Ident(19..21),
        },
    ],
    source: Values {
        values_tokens: [
            LParen(30..31),
            LiteralNumber(31..32),
            Comma(32..33),
            LiteralNumber(34..35),
            RParen(35..36),
            Comma(36..37),
            LParen(38..39),
            LiteralNumber(39..40),
            Comma(40..41),
            LiteralNumber(42..43),
            RParen(43..44),
        ],
    },
    overwrite: false,
}


---------- Input ----------
insert into table t format json;
---------- Output ---------
INSERT INTO t FORMAT json
---------- AST ------------
Insert {
    database: None,
    table: Identifier {
        name: "t",
        quote: None,
        span: Ident(18..19),
    },
    columns: [],
    source: Streaming {
        format: "json",
    },
    overwrite: false,
}


---------- Input ----------
insert into table t select * from t2;
---------- Output ---------
INSERT INTO t SELECT * FROM t2
---------- AST ------------
Insert {
    database: None,
    table: Identifier {
        name: "t",
        quote: None,
        span: Ident(18..19),
    },
    columns: [],
    source: Select {
        query: Query {
            span: [
                SELECT(20..26),
                Multiply(27..28),
                FROM(29..33),
                Ident(34..36),
            ],
            body: Select(
                SelectStmt {
                    span: [
                        SELECT(20..26),
                        Multiply(27..28),
                        FROM(29..33),
                        Ident(34..36),
                    ],
                    distinct: false,
                    select_list: [
                        QualifiedName(
                            [
                                Star,
                            ],
                        ),
                    ],
                    from: Some(
                        Table {
                            catalog: None,
                            database: None,
                            table: Identifier {
                                name: "t2",
                                quote: None,
                                span: Ident(34..36),
                            },
                            alias: None,
                            travel_point: None,
                        },
                    ),
                    selection: None,
                    group_by: [],
                    having: None,
                },
            ),
            order_by: [],
            limit: [],
            offset: None,
            format: None,
        },
    },
    overwrite: false,
}


---------- Input ----------
select parse_json('{"k1": [0, 1, 2]}').k1[0];
---------- Output ---------
SELECT parse_json('{"k1": [0, 1, 2]}').k1[0]
---------- AST ------------
Query(
    Query {
        span: [
            SELECT(0..6),
            Ident(7..17),
            LParen(17..18),
            QuotedString(18..37),
            RParen(37..38),
            Period(38..39),
            Ident(39..41),
            LBracket(41..42),
            LiteralNumber(42..43),
            RBracket(43..44),
        ],
        body: Select(
            SelectStmt {
                span: [
                    SELECT(0..6),
                    Ident(7..17),
                    LParen(17..18),
                    QuotedString(18..37),
                    RParen(37..38),
                    Period(38..39),
                    Ident(39..41),
                    LBracket(41..42),
                    LiteralNumber(42..43),
                    RBracket(43..44),
                ],
                distinct: false,
                select_list: [
                    AliasedExpr {
                        expr: MapAccess {
                            span: [
                                LBracket(41..42),
                                LiteralNumber(42..43),
                                RBracket(43..44),
                            ],
                            expr: MapAccess {
                                span: [
                                    Period(38..39),
                                    Ident(39..41),
                                ],
                                expr: FunctionCall {
                                    span: [
                                        Ident(7..17),
                                        LParen(17..18),
                                        QuotedString(18..37),
                                        RParen(37..38),
                                    ],
                                    distinct: false,
                                    name: Identifier {
                                        name: "parse_json",
                                        quote: None,
                                        span: Ident(7..17),
                                    },
                                    args: [
                                        Literal {
                                            span: [
                                                QuotedString(18..37),
                                            ],
                                            lit: String(
                                                "{\"k1\": [0, 1, 2]}",
                                            ),
                                        },
                                    ],
                                    params: [],
                                },
                                accessor: Period {
                                    key: Identifier {
                                        name: "k1",
                                        quote: None,
                                        span: Ident(39..41),
                                    },
                                },
                            },
                            accessor: Bracket {
                                key: Number(
                                    "0",
                                ),
                            },
                        },
                        alias: None,
                    },
                ],
                from: None,
                selection: None,
                group_by: [],
                having: None,
            },
        ),
        order_by: [],
        limit: [],
        offset: None,
        format: None,
    },
)


